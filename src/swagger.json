{
  "openapi": "3.0.4",
  "info": {
    "title": "Приложение для поиска работы и сотрудников в IT сфере - OpenAPI 3.0",
    "description": "as",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.12"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "https://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "resume",
      "description": "Everything about resume",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://swagger.io"
      }
    },
    {
      "name": "vacancy",
      "description": "Access to vacancies",
      "externalDocs": {
        "description": "Find out more about our store1111",
        "url": "https://swagger.io"
      }
    },
    {
      "name": "auth",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/resume/adverts": {
      "post": {
        "tags": [
          "resume"
        ],
        "summary": "Get all resumes.",
        "description": "Get all resumes.",
        "operationId": "getAllResumes",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Invalid ID supplied"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/resume/advert": {
      "put": {
        "tags": [
          "resume"
        ],
        "summary": "Create resumes.",
        "description": "Create resumes.",
        "operationId": "createResume",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Invalid ID supplied"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/resumes/my-adverts": {
      "post": {
        "tags": [
          "resume"
        ],
        "summary": "Finds resumes for current user.",
        "description": "Multiple status values can be provided with comma separated strings.",
        "operationId": "findResumesByStatus",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/resume/advert/{id}": {
      "get": {
        "tags": [
          "resume"
        ],
        "summary": "Get resume by ID.",
        "description": "Returns a single resume.",
        "operationId": "getResumeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of resume to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resume"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Resume"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Resume not found"
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "petstore_auth": [
              "write:Resume",
              "read:Resume"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "resume"
        ],
        "summary": "Delete resume by ID.",
        "description": "Deleta a single resume",
        "operationId": "deleteResumeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of resume to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "500": {
            "description": "Invalid ID supplied"
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "petstore_auth": [
              "write:Resume",
              "read:Resume"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "resume"
        ],
        "summary": "Update resume by ID.",
        "description": "Update a single resume",
        "operationId": "UpdateResumeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of resume to Update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "500": {
            "description": "Invalid ID supplied"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/vacancy/vacancies": {
      "post": {
        "tags": [
          "vacancy"
        ],
        "summary": "Get all vacancies",
        "description": "Get all resumes.",
        "operationId": "getAllVacancies",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Invalid ID supplied"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/vacancy/create-vacancy": {
      "put": {
        "tags": [
          "vacancy"
        ],
        "summary": "Create vacancy.",
        "description": "Get all resumes.",
        "operationId": "CreateVacancies",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Invalid ID supplied"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/vacancy/current-vacancies": {
      "post": {
        "tags": [
          "vacancy"
        ],
        "summary": "Get current resumes.",
        "description": "Get all resumes.",
        "operationId": "getAllCurrentVacancies",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Invalid ID supplied"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/vacancy/{id}": {
      "post": {
        "tags": [
          "vacancy"
        ],
        "summary": "Get vacancy by  id.",
        "description": "Get vacancy by  id.",
        "operationId": "getVacancieById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of resume to Update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Invalid ID supplied"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "delete": {
        "tags": [
          "vacancy"
        ],
        "summary": "Delete vacancy by  id.",
        "description": "Get vacancy by  id.",
        "operationId": "Deletevacancybyid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of resume to Update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Invalid ID supplied"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Get login.",
        "description": "Get login.",
        "operationId": "Get login",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Invalid ID supplied"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Get signup.",
        "description": "Get signup.",
        "operationId": "Get signup",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Invalid ID supplied"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "petId": {
            "type": "integer",
            "format": "int64",
            "example": 198772
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 7
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "example": "approved",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "order"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Dogs"
          }
        },
        "xml": {
          "name": "category"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "phone": {
            "type": "string",
            "example": "12345"
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "format": "int32",
            "example": 1
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "tag"
        }
      },
      "Pet": {
        "required": [
          "name",
          "photoUrls"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "photoUrl"
              }
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "pet"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      }
    },
    "requestBodies": {
      "Pet": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
} 